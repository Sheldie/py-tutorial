# -*- coding: UTF-8 -*-

__author__ = 'Shezzer'

# Python 数字数据类型用于存储数值。
# 数据类型是不允许改变的,这就意味着如果改变数字数据类型的值，将重新分配内存空间。
var1 = 1
var2 = 10
# 可以使用del语句删除一些数字对象的引用。
# del var1[,var2[,var3[....,varN]]]


# 整型(Int) - 通常被称为是整型或整数，是正或负整数，不带小数点。Python3 整型是没有限制大小的，可以当作 Long 类型使用。
# 浮点型(float) - 浮点型由整数部分与小数部分组成，浮点型也可以使用科学计数法表示（2.5e2 = 2.5 x 102 = 250）
# 复数(complex) - 复数由实数部分和虚数部分构成，可以用a + bj,或者complex(a,b)表示， 复数的实部a和虚部b都是浮点型。


# 可以使用十六进制和八进制来代表整数
number = 0xA0F
print(number)
number = 0o37
print(number)


# int	    float	    complex
# 10	    0.0	        3.14j
# 100	    15.20	    45.j
# -786	    -21.9	    9.322e-36j
# 080	    32.3e+18	.876j
# -0490	    -90.	    -.6545+0J
# -0x260	-32.54e100	3e+26J
# 0x69	    70.2E-12	4.53e-7j


# 数字类型转换
# int(x) 将x转换为一个整数。
# float(x) 将x转换到一个浮点数。
# complex(x) 将x转换到一个复数，实数部分为 x，虚数部分为 0。
# complex(x, y) 将 x 和 y 转换到一个复数，实数部分为 x，虚数部分为 y。x 和 y 是数字表达式。
a = 1.0
b = int(a)


print(2 + 2)
print(50 - 5 * 6)
print((50 - 5 * 6) / 4)
print(17 / 3)
# 在整数除法中，除法 / 总是返回一个浮点数，如果只想得到整数的结果，丢弃可能的分数部分，可以使用运算符 //
print(17 // 3)  # 整数除法返回向下取整后的结果
print(17 % 3)
# // 得到的并不一定是整数类型的数，它与分母分子的数据类型有关系。
print(7 // 2)
print(7.0 // 2)
print(7 // 2.0)


# 可以使用 ** 操作来进行幂运算
print(5 ** 2)
print(2 ** 7)


# 不同类型的数混合运算时会将整数转换为浮点数
print(3 * 3.75 / 1.5)
print(7.0 / 2)
